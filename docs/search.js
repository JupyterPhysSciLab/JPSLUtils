window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "JPSLUtils", "modulename": "JPSLUtils", "type": "module", "doc": "<h1 id=\"about-jpslutils\">About JPSLUtils</h1>\n\n<p>(aka Jupyter Physical Science Lab Utilities)</p>\n\n<p><a href=\"https://github.com/JupyterPhysSciLab/JPSLUtils\">Code Repository (Github)</a> |\n<a href=\"https://pypi.org/project/JPSLUtils/\">On PyPi</a></p>\n\n<h2 id=\"introduction\">Introduction</h2>\n\n<p>These are utilities used by multiple packages within the <a href=\"https://github.com/JupyterPhysSciLab\">Jupyter Physical\nScience Lab project</a>. It is unlikely \nthat anyone but a developer would\nhave reason to install these independently. They are installed when\nrequired by other packages/modules. <strong>Currently, API documentation is only \navailable for the python utilities.</strong> You will have to look at the hints \nbelow and the code to learn more about the javascript utilities.</p>\n\n<h2 id=\"contents\">Contents</h2>\n\n<ul>\n<li>This package mostly provides tools for running javascript operations that\nimpact the notebook. This includes things such as selecting a certain cell,\ninserting text into an existing cell, or running python code and using the\nresult from javascript. Some custom dialogs for user interaction are also\nincluded.</li>\n<li><code>JPSL Tools</code> menu can be installed as well. The command to activate it \nfrom python is <code>JPSLUtils.JPSL_Tools_Menu()</code>; from javascript \n<code>JPSLUtils.createJPSLToolsMenu(); JPSLUtils.init();</code>. This provides menu \naccess to some of the javascript operations:\n<ul>\n<li><strong>Hide cells</strong> that are marked as <code>JPSL.hide_on_print=true</code> in the cell \nmetadata.\nThis metadata can be set from a menu provided by the \n<a href=\"https://github.com/JupyterPhysSciLab/jupyter-instructortools\">jupyter-instructortools</a>\npackage. The meta-data can also be set manually, by editing it in the\nnotebook.</li>\n<li><strong>De-hide cells</strong> marked as <code>hide_on_print</code> in the cell metadata.</li>\n<li><strong>Hide/Show</strong> input table creation code.</li>\n<li><strong>Hide/Show</strong> code marked as hidden. Set using\n<a href=\"https://github.com/JupyterPhysSciLab/jupyter-instructortools\">jupyter-instructortools</a>.</li>\n<li><strong>Snippets for initializing some JPSL components and links to their\ndocumentation</strong> (JupyterPiDAQ, Jupyter Pandas GUI and Algebra with Sympy)</li>\n</ul></li>\n<li><strong>NOTE</strong>: if you wish input table creation code and selected code cells \nhidden without the menu being available, then you need to issue the command \n<code>OTJS('JPSLUtils.init();')</code> in python or just <code>JPSLUtils.init();</code> in \njavascript.</li>\n</ul>\n\n<h2 id=\"change-log\">Change Log</h2>\n\n<ul>\n<li>0.7.3 \n<ul>\n<li>More robust notebook environment detection by reordering of python \nand javascript calls.</li>\n<li>Removed asynchronous testing for environment.</li>\n<li>Updated docs.</li>\n</ul></li>\n<li>0.7.2\n<ul>\n<li>More \\n escaping fixes.</li>\n<li>Made notebook environment testing wait asynchronously for JS.</li>\n<li>Now gets JS notebook environment info even when running as a submodule \nof another module.</li>\n<li>Docs updated to match.</li>\n</ul></li>\n<li>0.7.1\n<ul>\n<li>Additional escaping of \\n fixes.</li>\n</ul></li>\n<li>0.7.0\n<ul>\n<li>Enhancements to latex and string escaping to support JupyterLab and \nColab. This breaks jupyter-pandas-GUI &lt;=0.6.2.1.</li>\n<li>Now checks for the environment it is running in (JLab, Colab or \nNBClassic) and sets the python variable <code>JPSLUtils.notebookenv = \n\"NBClassic|colab|None\"</code>. <code>None</code> probably means JLab.\nThe javascript variable <code>JPSLUtils.env = \"NBClassic|JupyterLab|None\"</code> \ndepending upon the environment.</li>\n<li>Typo and minor bug fixes.</li>\n</ul></li>\n<li>0.6.0\n<ul>\n<li>First pass at python API documentation.</li>\n<li>Python cell actions no longer run when a trusted notebook is opened \n(using <code>OTJS()</code>).</li>\n<li>Reformatted the user name and partner information saved on each \ninitialization.</li>\n</ul></li>\n<li>0.5.9\n<ul>\n<li>Switch to using hierarchical menus.</li>\n<li>Now requires JPSLMenus package.</li>\n</ul></li>\n<li>0.5.8\n<ul>\n<li>additional insert text and selection utilities</li>\n</ul></li>\n<li>0.5.7\n<ul>\n<li><strong>Breaking change</strong>: JPSL Tools menu is not automatically activated when\nthis package is imported. It now must be activated by an explicit call to\n<code>JPSLUtils.JPSL_Tools_Menu()</code>.</li>\n<li>Can now have package hide table creation code and selected code cells \nwithout the menu showing. The call is <code>OTJS('JPSLUtils.init();')</code></li>\n</ul></li>\n<li>0.5.6\n<ul>\n<li>added <code>hide/show</code> input table creation code.</li>\n<li>added <code>hide/show</code> hidden code.</li>\n<li>initialization now hides input table creation code.</li>\n<li>initialization now hides code marked for hiding.</li>\n</ul></li>\n<li>0.5.5 \n<ul>\n<li>added <code>JPSL Tools</code> menu to access cell hiding.</li>\n<li>record name dialog cannot be cancelled.</li>\n</ul></li>\n<li>0.5.4 added cell hiding toggle, which cells to hide chosen with instructor \ntools.</li>\n<li>0.5.3 add <code>select_containing_cell</code> and \n<code>insert_text_at_beginning_of_current_cell</code> to JS routines. Add python calls\n<code>havenp()</code> to check for <code>numpy as np</code> and <code>havepd()</code>\nto check for <code>pandas as pd</code>  in user name space.</li>\n<li>0.5.2 Minor bug fixes and updates to README.</li>\n<li>0.5.1 Introduced \"one time Javascript\" (<code>OTJS(...)</code>) alternative to \n<code>display(JS(...))</code>. This allows javascript calls from python that will \nnot be run the next time the notebook is opened and trusted.</li>\n<li>0.5.0 Initial release.</li>\n</ul>\n\n<h2 id=\"this-software-is-distributed-under-the-gnu-v3-licensehttpsgnuorglicenses\"><a href=\"https://gnu.org/licenses\">This software is distributed under the GNU V3 license</a></h2>\n\n<p>This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.</p>\n\n<p>Copyright - Jonathan Gutow, 2021, 2022.</p>\n\n<h1 id=\"development-notes\">Development Notes</h1>\n\n<h2 id=\"code-repositoryhttpsgithubcomjupyterphysscilabjpslutils\"><a href=\"https://github.com/JupyterPhysSciLab/JPSLUtils\">Code Repository</a></h2>\n\n<h2 id=\"building-documentation\">Building Documentation</h2>\n\n<ol>\n<li>Install or update pdoc into the virtual environment <code>pip install -U pdoc</code>.</li>\n<li>Make edits to the <code>.md</code> files within the docs folder that are to be \nincluded in the first page (see <code>__init__.py</code> of the jupyterpidaq package).</li>\n<li>At the root level run <code>pdoc \n--logo https://jupyterphysscilab.github.io/JPSLUtils/JPSLUtils-logo.svg --logo-link \nhttps://jupyterphysscilab.github.io/JPSLUtils/ --footer-text \n\"JPSLUtils vX.X.X\" -html -o docs JPSLUtils</code></li>\n</ol>\n\n<h2 id=\"building-pypi-package\">Building PyPi package</h2>\n\n<ol>\n<li>Make sure to update the version number in setup.py first.</li>\n<li>Install updated  setuptools and twine in the virtual environment:\n<code>\npipenv shell\npip install -U setuptools wheel twine\n</code></li>\n<li>Build the distribution <code>python -m setup sdist bdist_wheel</code>.</li>\n<li>Test it on <code>test.pypi.org</code>.\n<ol>\n<li>Upload it (you will need an account on test.pypi.org):\n<code>python -m twine upload --repository testpypi dist/*</code>.</li>\n<li>Create a new virtual environment and test install into it:\n<code>\nexit # to get out of the current environment\ncd &lt;somewhere&gt;\nmkdir &lt;new virtual environment&gt;\ncd &lt;new directory&gt;\npipenv shell #creates the new environment and enters it.\npip install -i https://test.pypi.org/..... # copy actual link from the\n                                           # repository on test.pypi.\n</code>\nThere are often install issues because sometimes only older versions of\nsome of the required packages are available on test.pypi.org. If this\nis the only problem change the version to end in <code>rc0</code> for release\ncandidate and try it on the regular pypi.org as described below for\nreleasing on PyPi.</li>\n<li>After install test by running a jupyter notebook in the virtual \nenvironment.</li>\n</ol></li>\n</ol>\n\n<h2 id=\"releasing-on-pypi\">Releasing on PyPi</h2>\n\n<p>Proceed only if testing of the build is successful.</p>\n\n<ol>\n<li>Double check the version number in setup.py.</li>\n<li>Rebuild the release: <code>python -m setup sdist bdist_wheel</code>.</li>\n<li>Upload it: <code>python -m twine upload dist/*</code></li>\n<li>Make sure it works by installing it in a clean virtual environment. This\nis the same as on test.pypi.org except without <code>-i https://test.pypy...</code>. If\nit does not work, pull the release.</li>\n</ol>\n"}, {"fullname": "JPSLUtils.utils", "modulename": "JPSLUtils.utils", "type": "module", "doc": "<p>Utility routines that are useful for more than one package in the Jupyter\nPhysical Science Lab modules.</p>\n"}, {"fullname": "JPSLUtils.utils.JPSL_Tools_Menu", "modulename": "JPSLUtils.utils", "qualname": "JPSL_Tools_Menu", "type": "function", "doc": "<p>Installs and activates the JPSL Tools menu</p>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.OTJS", "modulename": "JPSLUtils.utils", "qualname": "OTJS", "type": "function", "doc": "<p>aka: One Time Javascript.</p>\n\n<p>This wraps a call to display(JS(script)) so that it will not run again\nafter 15 seconds have passed. This overcomes the way javascript from\npython is embedded in the notebook metadata. When a notebook with embedded\njavascript is reopened and trusted all the javascript calls are run again.\nThis is fine for utility functions, but not necessarily things that are\nonly expected to run if a particular cell is executed.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>script</strong>:  valid javascript string.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "(script)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.update_notebook_env", "modulename": "JPSLUtils.utils", "qualname": "update_notebook_env", "type": "function", "doc": "<p>Checks notebook environment. Calls javascript to check for\nJupyter classic and Jupyter Lab. Sets JPSLUtils.notebookenv = colab|\nNBClassic|None. None is probably Jupyter Lab.</p>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "(notebookenv)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.new_cell_immediately_below", "modulename": "JPSLUtils.utils", "qualname": "new_cell_immediately_below", "type": "function", "doc": "<p>Inserts a new cell immediately below the currently selected cell.</p>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.select_cell_immediately_below", "modulename": "JPSLUtils.utils", "qualname": "select_cell_immediately_below", "type": "function", "doc": "<p>Selects the cell below the currently selected cell.</p>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.get_text_of_current_cell", "modulename": "JPSLUtils.utils", "qualname": "get_text_of_current_cell", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.return_text_of_current_cell", "modulename": "JPSLUtils.utils", "qualname": "return_text_of_current_cell", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.move_cursor_in_current_cell", "modulename": "JPSLUtils.utils", "qualname": "move_cursor_in_current_cell", "type": "function", "doc": "<p>Moves the cursor by the amount delta in a codemirror cell.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>delta</strong>:  change in cursor position.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "(delta)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.escape_text_for_js", "modulename": "JPSLUtils.utils", "qualname": "escape_text_for_js", "type": "function", "doc": "<p>To prevent issues in javascript escapes:</p>\n\n<p>to \\n,\n   \" to \\\"\n   ' to \\'\n   :param text:\n   :return:</p>\n", "signature": "(text)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.pseudoLatexToLatex", "modulename": "JPSLUtils.utils", "qualname": "pseudoLatexToLatex", "type": "function", "doc": "<p></p>\n", "signature": "(text)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.insert_text_into_next_cell", "modulename": "JPSLUtils.utils", "qualname": "insert_text_into_next_cell", "type": "function", "doc": "<p>Replaces the current selection in a codemirror cell with the contents of\ntext.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  String to replace the selection with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "(text)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.replace_text_of_next_cell", "modulename": "JPSLUtils.utils", "qualname": "replace_text_of_next_cell", "type": "function", "doc": "<p>Replaces the contents of the cell following the selected cell with the\ncontents of text.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  String to replace the contents of the cell wtih.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "(text)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.replace_text_of_current_cell", "modulename": "JPSLUtils.utils", "qualname": "replace_text_of_current_cell", "type": "function", "doc": "<p>Replaces the contents of the currently selected cell with the contents\nof text.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  String to replace the contents of the cell with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "(text)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.insert_text_at_beginning_of_current_cell", "modulename": "JPSLUtils.utils", "qualname": "insert_text_at_beginning_of_current_cell", "type": "function", "doc": "<p>Insert the contents of text at the beginning of the currently selected\n   cell. Append \nto line insert as a separate line.\n   :param text: String to insert into cell.\n   :return:</p>\n", "signature": "(text)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.insert_newline_at_end_of_current_cell", "modulename": "JPSLUtils.utils", "qualname": "insert_newline_at_end_of_current_cell", "type": "function", "doc": "<p>Insert the contents of text as a newline at the end of the currently\nselected cell.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  String of the text to be added to the end of the cell.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "(text)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.select_containing_cell", "modulename": "JPSLUtils.utils", "qualname": "select_containing_cell", "type": "function", "doc": "<p>Create a synthetic click in the cell to force selection of the cell\ncontaining the DOM element with the name matching the contents of elemID.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>elemID</strong>:  String containing the id of the DOM element.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "(elemID)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.delete_selected_cell", "modulename": "JPSLUtils.utils", "qualname": "delete_selected_cell", "type": "function", "doc": "<p>Deletes the selected cell.</p>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.record_names_timestamp", "modulename": "JPSLUtils.utils", "qualname": "record_names_timestamp", "type": "function", "doc": "<p>Creates a dialog to collect the names of the user and their partners.\nThis is recorded permanently as a comment at the end of the cell where\nthis is run. The cell should be protected, so that it cannot be\naccidentally deleted.</p>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.timestamp", "modulename": "JPSLUtils.utils", "qualname": "timestamp", "type": "function", "doc": "<p>Displays an HTML timestamp, with user and computer info in the output of\nthe cell it is run in.</p>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.havepd", "modulename": "JPSLUtils.utils", "qualname": "havepd", "type": "function", "doc": "<p>Checks to see if pandas is imported into the ipython user namespace as pd.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the name pd refers to pandas, otherwise false.</p>\n</blockquote>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.havenp", "modulename": "JPSLUtils.utils", "qualname": "havenp", "type": "function", "doc": "<p>Checks to see if numpy is imported into the ipython user namespace as np.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the name np refers to numpy, otherwise false.</p>\n</blockquote>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.find_pandas_dataframe_names", "modulename": "JPSLUtils.utils", "qualname": "find_pandas_dataframe_names", "type": "function", "doc": "<p>This operation will search the interactive name space for pandas\nDataFrame objects. It will not find DataFrames that are children\nof objects in the interactive namespace. You will need to provide\nyour own operation for finding those.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list of string names for objects in the global interactive\n  namespace that are pandas DataFrames.</p>\n</blockquote>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.find_figure_names", "modulename": "JPSLUtils.utils", "qualname": "find_figure_names", "type": "function", "doc": "<p>This operation will search the interactive namespace for objects that are\nplotly Figures (plotly.graph_objects.Figure) or plotly FigureWidgets\n(plotly.graph_objects.FigureWidget). It will not find Figures or\nFigureWidgets that are children of other objects. You will need to\nprovide your own operation for finding those.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list of string names for the objects in the global\n  interactive namespace that are plotly Figures or FigureWidgets.</p>\n</blockquote>\n", "signature": "()", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.iconselector", "modulename": "JPSLUtils.utils", "qualname": "iconselector", "type": "class", "doc": "<p>This class provides a self updating set of small buttons showing the\nfont-awesome icons passed to it. The user selected icon is highlighted\nin darkgray. The <code>selected</code> attribute (value is a synonym) is set to the\nname of the current selection. The <code>box</code> attribute is an ipywidget HBox\nthat can be displayed or incorporated into more complex ipywidget\nconstructs to interact with the user.</p>\n"}, {"fullname": "JPSLUtils.utils.iconselector.__init__", "modulename": "JPSLUtils.utils", "qualname": "iconselector.__init__", "type": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>iconlist</strong>:  list of string names for the font awsome icons to\ndisplay. The names should not be prefixed with 'fa-'.</li>\n<li><strong>selected</strong>:  name of selected icon (default = None).</li>\n</ul>\n", "signature": "(self, iconlist, selected=None)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.iconselector.value", "modulename": "JPSLUtils.utils", "qualname": "iconselector.value", "type": "variable", "doc": "<p></p>\n"}, {"fullname": "JPSLUtils.utils.notice_group", "modulename": "JPSLUtils.utils", "qualname": "notice_group", "type": "class", "doc": "<p>A notice group contains a list of strings that are referred to by their\nindex. The group keeps track of which notices are 'active'. A call to the\n<code>.notice_html()</code> method returns an unordered html formatted list of the\nnotice texts. This can be used to display or update notice text\nfor the user.</p>\n\n<p>Optional notice group color, header and footers can be provided.</p>\n"}, {"fullname": "JPSLUtils.utils.notice_group.__init__", "modulename": "JPSLUtils.utils", "qualname": "notice_group.__init__", "type": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>noticelist</strong>:  list of strings of the text for each notice</li>\n<li><strong>header</strong>:  string providing a header for this notice group</li>\n<li><strong>footer</strong>:  string providing a footer for this notice group</li>\n<li><strong>color</strong>:  string compatible with css color attribute, used to\ncolor the displayed notices. The color not impact headers and footers.</li>\n</ul>\n", "signature": "(self, noticelist, header='', footer='', color='')", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.notice_group.get_active", "modulename": "JPSLUtils.utils", "qualname": "notice_group.get_active", "type": "function", "doc": "<p>Returns a list of indexes of active notices</p>\n", "signature": "(self)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.notice_group.set_active", "modulename": "JPSLUtils.utils", "qualname": "notice_group.set_active", "type": "function", "doc": "<p>Used to set a specific list of notices to active. This will remove\nactive notices that are not in the provided list.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>whichnotices</strong>: </li>\n</ul>\n", "signature": "(self, whichnotices)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.notice_group.activate_notice", "modulename": "JPSLUtils.utils", "qualname": "notice_group.activate_notice", "type": "function", "doc": "<p>adds one of the notices to the active list</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>notice_id</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "(self, notice_id)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.notice_group.deactivate_notice", "modulename": "JPSLUtils.utils", "qualname": "notice_group.deactivate_notice", "type": "function", "doc": "<p>removes a notice from the active list</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>notice_id</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "(self, notice_id)", "funcdef": "def"}, {"fullname": "JPSLUtils.utils.notice_group.notice_html", "modulename": "JPSLUtils.utils", "qualname": "notice_group.notice_html", "type": "function", "doc": "<p>Provides an html formatted string displaying the active notices.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>string of html.</p>\n</blockquote>\n", "signature": "(self)", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();